This document outlines the different interfaces in the Reedb API. Each interface has a dedicated set of actions and is used for specific things when dealing with vaults.


# Interface Core 

In the very center of it is the core interface that handles the most basic of operations. It is started and terminated to enable handling with Reedb.
It has the following functions:

- init
- terminate

The core interface also determines whether or not Reedb is being run via HTTP access. If so, it will lock some of the functions that are deemed too dangerous to be exposed via HTTP (although that can be overwritten via the config interface).

# Vault Interface (VI)

The vault interface is something built ontop of the Reedb Core. It handles all operations connected to vaults and is split up into two parts: management and operations. Management handles the scoping, unscoping, tracking and creation of vaults. Removing of vaults is possible, however only on a non-HTTP initiated system.

### Vault Management

- scope vault
- unscope vault
- available vaults
- create vault
- remove vault (NOT VIA HTTP)

### Vault Operations
- access headers
- access file
- insert
- close vault



# Daemon Interface (DI)

The daemon interface only becomes relevant when using Reedb as a system daemon and talking to it via the HTTP interface. While it is possible to se the token authentication as a dependency run, it is unnecessary and not recommended.


### Token Operations
- request token
- access with token
- free token


# Config Interface (CI)

The config interface is being used regardless of the run-mode of Reedb. It handles all config calls to vaults as well as the Daemon (even if not in daemon mode as it is more about global configurations that apply to ALL vaults!).


### Vault Config Operations
- set vault timeout
- add header field
- change passphrase
- read information

### Daemon Config Operations
- set global timeout
- set logging state
- set minimal phrase length