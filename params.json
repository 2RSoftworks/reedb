{
  "name": "Reedb",
  "tagline": "An encrypted document-oriented database toolkit for the paranoid",
  "body": "![Reedb Logo](https://raw.githubusercontent.com/reepass/libreedb/master/extras/logo_white.png)\r\n\r\n:lock: Fully encrypted, document-table-hybrid oriented database with per-user encryption, nested ciphers, groups and zones for selective sharing, rights management and revocation of privilages. Encrypt single datasets, multisets or even filesystem nodes via FUSE.\r\n\r\nBugs are being tracked on this github repository - if you find issues, please open an issue. Exact progress can be tracked on the [Lonely Robot wekan](https://plan.lonelyrobot.io/b/WEDvddNHrxBzmqCLs/reedb#)\r\n\r\nBuild\r\n-----\r\n\r\nlibreedb is built on a few libraries. Building has been tested on Fedora 24 and Arch Linux. If you have issues compiling the library, please open an issue for it.\r\n\r\nThe current list of external dependencies is: \"**gcc cmake libgcrypt libapr libgdsl protobuf-c**\"\r\n\r\nAn out-of-source build is recommended\r\n\r\n```console\r\nmkdir build && cd build/\r\ncmake ..\r\ncmake --build .\r\n```\r\n\r\nBy default libreeedb builds a static object. \r\n\r\nHow to use\r\n----------\r\n\r\nTo start using a \"ree\" database you need to create a context. You can either do so on the stack or allocate memory by yourself and pass the pointer instead.\r\n\r\n```\r\nrdb_err_t err;\r\nrdb_context ctx;\r\nerr = rdb_ctx_init(&ctx);\r\n```\r\n\r\nAfterwards the context is available for further configuration or to create a new database. Reedb provides you access to fully encrypted databases called \"vaults\". \r\n\r\nThis name was chosen to represent the added security over a normal database. This added security however doesn't have to come at the price of performance or convenience.\r\n\r\n```\r\n\r\nrdb_vault vault;\r\nerr = rdb_ctx_vaultcreate(&ctx, &vault, \"default\", \"~/Documents/\");\r\n// Check for errors\r\n\r\nrdb_uuid user = rdb_vlts_adduser(vault, \"spacekookie\", 0);\r\nerr = rdb_vlts_setlogin(vault, &user, \"mega_passphrase!\");\r\n// Check for errors\r\n\r\n```\r\n\r\nWhen creating a vault flags need to be provided to control it's behaviour. Most flags are covered under default values, however there is one thing you need to set before you can start using your vault: the type.\r\n\r\nThe vault type very profoundly changes the way the vault will behave and is thus required to be explicitly defined. An implicitly chosen behaviour might endanger data in your usecase. The following vault types are available:\r\n\r\n| Vault type  | Unique behaviour |\r\n| ------------- | ------------- |\r\n| Root  | The vault is accessable and managed by only one \"root\" user  |\r\n| Managed  | The vault has multi-user access however still has an administrator with super-access  |\r\n| Multi-User  | The vault has mutliple users with no administrator but allows for zone management (aka hierarchy)  |\r\n| Anarchy  | The vault has multiple users with no administrator. There is NO hierarchy  |\r\n\r\n\r\nYou can then bitwise OR together whatever flags you want:\r\n\r\n```\r\nerr = rdb_vlts_setflags(vault, RDB_FLG_ROOT | ...);\r\n```\r\n\r\nMore documentation to follow :)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}