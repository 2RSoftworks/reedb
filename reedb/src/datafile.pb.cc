// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datafile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datafile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace reedb_proto {

namespace {

const ::google::protobuf::Descriptor* proto_file_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  proto_file_reflection_ = NULL;
const ::google::protobuf::Descriptor* proto_file_pair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  proto_file_pair_reflection_ = NULL;
const ::google::protobuf::Descriptor* proto_file_revision_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  proto_file_revision_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_datafile_2eproto() {
  protobuf_AddDesc_datafile_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datafile.proto");
  GOOGLE_CHECK(file != NULL);
  proto_file_descriptor_ = file->message_type(0);
  static const int proto_file_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, revs_),
  };
  proto_file_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      proto_file_descriptor_,
      proto_file::default_instance_,
      proto_file_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(proto_file));
  proto_file_pair_descriptor_ = proto_file_descriptor_->nested_type(0);
  static const int proto_file_pair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_pair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_pair, val_),
  };
  proto_file_pair_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      proto_file_pair_descriptor_,
      proto_file_pair::default_instance_,
      proto_file_pair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_pair, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_pair, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(proto_file_pair));
  proto_file_revision_descriptor_ = proto_file_descriptor_->nested_type(1);
  static const int proto_file_revision_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_revision, rev_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_revision, entry_),
  };
  proto_file_revision_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      proto_file_revision_descriptor_,
      proto_file_revision::default_instance_,
      proto_file_revision_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_revision, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proto_file_revision, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(proto_file_revision));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datafile_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    proto_file_descriptor_, &proto_file::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    proto_file_pair_descriptor_, &proto_file_pair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    proto_file_revision_descriptor_, &proto_file_revision::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datafile_2eproto() {
  delete proto_file::default_instance_;
  delete proto_file_reflection_;
  delete proto_file_pair::default_instance_;
  delete proto_file_pair_reflection_;
  delete proto_file_revision::default_instance_;
  delete proto_file_revision_reflection_;
}

void protobuf_AddDesc_datafile_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016datafile.proto\022\013reedb_proto\"\342\001\n\nproto_"
    "file\022\014\n\004name\030\001 \002(\t\022\020\n\010category\030\002 \002(\t\022\013\n\003"
    "url\030\003 \003(\t\022\014\n\004tags\030\004 \003(\t\022.\n\004revs\030\005 \003(\0132 ."
    "reedb_proto.proto_file.revision\032 \n\004pair\022"
    "\013\n\003key\030\001 \002(\t\022\013\n\003val\030\002 \002(\t\032G\n\010revision\022\016\n"
    "\006rev_no\030\001 \002(\005\022+\n\005entry\030\002 \003(\0132\034.reedb_pro"
    "to.proto_file.pair", 258);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datafile.proto", &protobuf_RegisterTypes);
  proto_file::default_instance_ = new proto_file();
  proto_file_pair::default_instance_ = new proto_file_pair();
  proto_file_revision::default_instance_ = new proto_file_revision();
  proto_file::default_instance_->InitAsDefaultInstance();
  proto_file_pair::default_instance_->InitAsDefaultInstance();
  proto_file_revision::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datafile_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datafile_2eproto {
  StaticDescriptorInitializer_datafile_2eproto() {
    protobuf_AddDesc_datafile_2eproto();
  }
} static_descriptor_initializer_datafile_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int proto_file_pair::kKeyFieldNumber;
const int proto_file_pair::kValFieldNumber;
#endif  // !_MSC_VER

proto_file_pair::proto_file_pair()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:reedb_proto.proto_file.pair)
}

void proto_file_pair::InitAsDefaultInstance() {
}

proto_file_pair::proto_file_pair(const proto_file_pair& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:reedb_proto.proto_file.pair)
}

void proto_file_pair::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

proto_file_pair::~proto_file_pair() {
  // @@protoc_insertion_point(destructor:reedb_proto.proto_file.pair)
  SharedDtor();
}

void proto_file_pair::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete val_;
  }
  if (this != default_instance_) {
  }
}

void proto_file_pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* proto_file_pair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return proto_file_pair_descriptor_;
}

const proto_file_pair& proto_file_pair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datafile_2eproto();
  return *default_instance_;
}

proto_file_pair* proto_file_pair::default_instance_ = NULL;

proto_file_pair* proto_file_pair::New() const {
  return new proto_file_pair;
}

void proto_file_pair::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_val()) {
      if (val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        val_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool proto_file_pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:reedb_proto.proto_file.pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_val;
        break;
      }

      // required string val = 2;
      case 2: {
        if (tag == 18) {
         parse_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val().data(), this->val().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "val");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:reedb_proto.proto_file.pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:reedb_proto.proto_file.pair)
  return false;
#undef DO_
}

void proto_file_pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:reedb_proto.proto_file.pair)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string val = 2;
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->val(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:reedb_proto.proto_file.pair)
}

::google::protobuf::uint8* proto_file_pair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:reedb_proto.proto_file.pair)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string val = 2;
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->val(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reedb_proto.proto_file.pair)
  return target;
}

int proto_file_pair::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // required string val = 2;
    if (has_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void proto_file_pair::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const proto_file_pair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const proto_file_pair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void proto_file_pair::MergeFrom(const proto_file_pair& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_val()) {
      set_val(from.val());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void proto_file_pair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proto_file_pair::CopyFrom(const proto_file_pair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_file_pair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void proto_file_pair::Swap(proto_file_pair* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(val_, other->val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata proto_file_pair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = proto_file_pair_descriptor_;
  metadata.reflection = proto_file_pair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int proto_file_revision::kRevNoFieldNumber;
const int proto_file_revision::kEntryFieldNumber;
#endif  // !_MSC_VER

proto_file_revision::proto_file_revision()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:reedb_proto.proto_file.revision)
}

void proto_file_revision::InitAsDefaultInstance() {
}

proto_file_revision::proto_file_revision(const proto_file_revision& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:reedb_proto.proto_file.revision)
}

void proto_file_revision::SharedCtor() {
  _cached_size_ = 0;
  rev_no_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

proto_file_revision::~proto_file_revision() {
  // @@protoc_insertion_point(destructor:reedb_proto.proto_file.revision)
  SharedDtor();
}

void proto_file_revision::SharedDtor() {
  if (this != default_instance_) {
  }
}

void proto_file_revision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* proto_file_revision::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return proto_file_revision_descriptor_;
}

const proto_file_revision& proto_file_revision::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datafile_2eproto();
  return *default_instance_;
}

proto_file_revision* proto_file_revision::default_instance_ = NULL;

proto_file_revision* proto_file_revision::New() const {
  return new proto_file_revision;
}

void proto_file_revision::Clear() {
  rev_no_ = 0;
  entry_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool proto_file_revision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:reedb_proto.proto_file.revision)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 rev_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rev_no_)));
          set_has_rev_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_entry;
        break;
      }

      // repeated .reedb_proto.proto_file.pair entry = 2;
      case 2: {
        if (tag == 18) {
         parse_entry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_entry;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:reedb_proto.proto_file.revision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:reedb_proto.proto_file.revision)
  return false;
#undef DO_
}

void proto_file_revision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:reedb_proto.proto_file.revision)
  // required int32 rev_no = 1;
  if (has_rev_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rev_no(), output);
  }

  // repeated .reedb_proto.proto_file.pair entry = 2;
  for (int i = 0; i < this->entry_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entry(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:reedb_proto.proto_file.revision)
}

::google::protobuf::uint8* proto_file_revision::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:reedb_proto.proto_file.revision)
  // required int32 rev_no = 1;
  if (has_rev_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rev_no(), target);
  }

  // repeated .reedb_proto.proto_file.pair entry = 2;
  for (int i = 0; i < this->entry_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->entry(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reedb_proto.proto_file.revision)
  return target;
}

int proto_file_revision::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 rev_no = 1;
    if (has_rev_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rev_no());
    }

  }
  // repeated .reedb_proto.proto_file.pair entry = 2;
  total_size += 1 * this->entry_size();
  for (int i = 0; i < this->entry_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entry(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void proto_file_revision::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const proto_file_revision* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const proto_file_revision*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void proto_file_revision::MergeFrom(const proto_file_revision& from) {
  GOOGLE_CHECK_NE(&from, this);
  entry_.MergeFrom(from.entry_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rev_no()) {
      set_rev_no(from.rev_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void proto_file_revision::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proto_file_revision::CopyFrom(const proto_file_revision& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_file_revision::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->entry())) return false;
  return true;
}

void proto_file_revision::Swap(proto_file_revision* other) {
  if (other != this) {
    std::swap(rev_no_, other->rev_no_);
    entry_.Swap(&other->entry_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata proto_file_revision::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = proto_file_revision_descriptor_;
  metadata.reflection = proto_file_revision_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int proto_file::kNameFieldNumber;
const int proto_file::kCategoryFieldNumber;
const int proto_file::kUrlFieldNumber;
const int proto_file::kTagsFieldNumber;
const int proto_file::kRevsFieldNumber;
#endif  // !_MSC_VER

proto_file::proto_file()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:reedb_proto.proto_file)
}

void proto_file::InitAsDefaultInstance() {
}

proto_file::proto_file(const proto_file& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:reedb_proto.proto_file)
}

void proto_file::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

proto_file::~proto_file() {
  // @@protoc_insertion_point(destructor:reedb_proto.proto_file)
  SharedDtor();
}

void proto_file::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (category_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete category_;
  }
  if (this != default_instance_) {
  }
}

void proto_file::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* proto_file::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return proto_file_descriptor_;
}

const proto_file& proto_file::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datafile_2eproto();
  return *default_instance_;
}

proto_file* proto_file::default_instance_ = NULL;

proto_file* proto_file::New() const {
  return new proto_file;
}

void proto_file::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_category()) {
      if (category_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        category_->clear();
      }
    }
  }
  url_.Clear();
  tags_.Clear();
  revs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool proto_file::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:reedb_proto.proto_file)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_category;
        break;
      }

      // required string category = 2;
      case 2: {
        if (tag == 18) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category().data(), this->category().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "category");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // repeated string url = 3;
      case 3: {
        if (tag == 26) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url(this->url_size() - 1).data(),
            this->url(this->url_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        if (input->ExpectTag(34)) goto parse_tags;
        break;
      }

      // repeated string tags = 4;
      case 4: {
        if (tag == 34) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tags");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tags;
        if (input->ExpectTag(42)) goto parse_revs;
        break;
      }

      // repeated .reedb_proto.proto_file.revision revs = 5;
      case 5: {
        if (tag == 42) {
         parse_revs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_revs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_revs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:reedb_proto.proto_file)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:reedb_proto.proto_file)
  return false;
#undef DO_
}

void proto_file::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:reedb_proto.proto_file)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string category = 2;
  if (has_category()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->category(), output);
  }

  // repeated string url = 3;
  for (int i = 0; i < this->url_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->url(i).data(), this->url(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "url");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->url(i), output);
  }

  // repeated string tags = 4;
  for (int i = 0; i < this->tags_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->tags(i).data(), this->tags(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->tags(i), output);
  }

  // repeated .reedb_proto.proto_file.revision revs = 5;
  for (int i = 0; i < this->revs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->revs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:reedb_proto.proto_file)
}

::google::protobuf::uint8* proto_file::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:reedb_proto.proto_file)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string category = 2;
  if (has_category()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->category(), target);
  }

  // repeated string url = 3;
  for (int i = 0; i < this->url_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url(i).data(), this->url(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "url");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->url(i), target);
  }

  // repeated string tags = 4;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->tags(i), target);
  }

  // repeated .reedb_proto.proto_file.revision revs = 5;
  for (int i = 0; i < this->revs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->revs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reedb_proto.proto_file)
  return target;
}

int proto_file::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string category = 2;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

  }
  // repeated string url = 3;
  total_size += 1 * this->url_size();
  for (int i = 0; i < this->url_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->url(i));
  }

  // repeated string tags = 4;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .reedb_proto.proto_file.revision revs = 5;
  total_size += 1 * this->revs_size();
  for (int i = 0; i < this->revs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->revs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void proto_file::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const proto_file* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const proto_file*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void proto_file::MergeFrom(const proto_file& from) {
  GOOGLE_CHECK_NE(&from, this);
  url_.MergeFrom(from.url_);
  tags_.MergeFrom(from.tags_);
  revs_.MergeFrom(from.revs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_category()) {
      set_category(from.category());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void proto_file::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proto_file::CopyFrom(const proto_file& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_file::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->revs())) return false;
  return true;
}

void proto_file::Swap(proto_file* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(category_, other->category_);
    url_.Swap(&other->url_);
    tags_.Swap(&other->tags_);
    revs_.Swap(&other->revs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata proto_file::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = proto_file_descriptor_;
  metadata.reflection = proto_file_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace reedb_proto

// @@protoc_insertion_point(global_scope)
